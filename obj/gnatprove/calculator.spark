{
  "spark": [
    {
      "name": "Calculator",
      "sloc": [
        {
          "file": "calculator.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "Calculator.binaryToDecimal",
      "sloc": [
        {
          "file": "calculator.ads",
          "line": 6
        }
      ],
      "spark": "all"
    },
    {
      "name": "Calculator.decimalToBinary",
      "sloc": [
        {
          "file": "calculator.ads",
          "line": 7
        }
      ],
      "spark": "all"
    },
    {
      "name": "Calculator.octalToDecimal",
      "sloc": [
        {
          "file": "calculator.ads",
          "line": 8
        }
      ],
      "spark": "all"
    },
    {
      "name": "Calculator.decimalToOctal",
      "sloc": [
        {
          "file": "calculator.ads",
          "line": 12
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "calculator.adb",
      "line": 37,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__31.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 37,
      "col": 20,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__32.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 39,
      "col": 16,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__33.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 41,
      "col": 8,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__34.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 50,
      "col": 10,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__79.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 51,
      "col": 34,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__80.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 53,
      "col": 34,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__81.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 55,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__82.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 57,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__83.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__111.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 17,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__112.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 9,
      "col": 12,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__113.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 11,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__114.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 20,
      "col": 31,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__144.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 20,
      "col": 31,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__145.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 21,
      "col": 15,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__146.trace",
      "how_proved": "flow"
    },
    {
      "file": "calculator.adb",
      "line": 23,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": {
      },
      "tracefile": "calculator__flow__147.trace",
      "how_proved": "flow"
    }
  ],
  "proof": [
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 43,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 2101,
              "time": 9.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 2117,
              "time": 1.18000000000000E+00
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 8,
      "check_col": 43,
      "tracefile": "calculator.adb_8_43_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 0,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 20,
      "col": 40,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 20,
      "check_col": 40,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "calculator.adb",
      "line": 50,
      "col": 19,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 50,
      "check_col": 19,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "calculator.adb",
      "line": 9,
      "col": 17,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4415,
              "time": 9.80000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3065,
              "time": 8.50000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 9,
      "check_col": 17,
      "tracefile": "calculator.adb_9_17_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "9": [
            {
              "name": "n",
              "value": "2147483647",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 1,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 38,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4564,
              "time": 9.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3881,
              "time": 9.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 8,
      "check_col": 38,
      "tracefile": "calculator.adb_8_38_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 2,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 27,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4495,
              "time": 9.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 2741,
              "time": 8.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 8,
      "check_col": 27,
      "tracefile": "calculator.adb_8_27_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 3,
      "how_proved": "prover"
    },
    {
      "file": "calculator.ads",
      "line": 10,
      "col": 49,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.ads",
      "check_line": 10,
      "check_col": 49,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "calculator.adb",
      "line": 31,
      "col": 18,
      "rule": "VC_INDEX_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 108,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 96,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 105,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 31,
      "check_col": 18,
      "tracefile": "calculator.adb_31_18_index_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "31": [
            {
              "name": "Binary",
              "value": "(others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 4,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 21,
      "col": 23,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 21,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "calculator.adb",
      "line": 8,
      "col": 27,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4490,
              "time": 9.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3673,
              "time": 8.80000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 8,
      "check_col": 27,
      "tracefile": "calculator.adb_8_27_range_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 5,
      "how_proved": "prover"
    },
    {
      "file": "calculator.ads",
      "line": 10,
      "col": 43,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "Calculator.octalToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 8
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 13,
              "time": 0
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                },
                "transformations": {
                }
              }
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4472,
              "time": 9.90000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3505,
              "time": 9.10000000000000E-01
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 5216,
                    "time": 1
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.ads",
      "check_line": 10,
      "check_col": 14,
      "tracefile": "calculator.ads_10_14_postcondition.trace",
      "cntexmp": {
        "calculator.adb": {
          "4": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "7": [
            {
              "name": "i",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "8": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "9": [
            {
              "name": "n",
              "value": "0",
              "kind": "variable"
            }
          ],
          "11": [
            {
              "name": "octalToDecimal'Result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "8": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            }
          ],
          "10": [
            {
              "name": "Octal",
              "value": "(others => 0)",
              "kind": "variable"
            },
            {
              "name": "Octal'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Octal'Last",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "x",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 6,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 39,
      "col": 25,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 3193,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 2719,
              "time": 8.20000000000000E-01
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 3013,
                    "time": 1.12000000000000E+00
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 69,
                    "time": 0
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 3013,
                    "time": 1.12000000000000E+00
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 69,
                    "time": 0
                  }
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 39,
      "check_col": 25,
      "tracefile": "calculator.adb_39_25_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "35": [
            {
              "name": "counter",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "index",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "39": [
            {
              "name": "index",
              "value": "2147483647",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "32",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 7,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 36,
      "col": 21,
      "rule": "VC_INDEX_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 13,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 108,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 108,
              "time": 0
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 83,
                    "time": 0
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 83,
                    "time": 0
                  }
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 36,
      "check_col": 21,
      "tracefile": "calculator.adb_36_21_index_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "32": [
            {
              "name": "result",
              "value": "1",
              "kind": "variable"
            }
          ],
          "35": [
            {
              "name": "counter",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "index",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "36": [
            {
              "name": "Binary",
              "value": "(32 => True, others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "32",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "32",
              "kind": "variable"
            },
            {
              "name": "counter",
              "value": "31",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(32 => True, others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "32",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "32",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 8,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 37,
      "col": 34,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 2154,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 2170,
              "time": 1.17000000000000E+00
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 2090,
                    "time": 1.11000000000000E+00
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 2090,
                    "time": 1.12000000000000E+00
                  }
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 37,
      "check_col": 34,
      "tracefile": "calculator.adb_37_34_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "32": [
            {
              "name": "result",
              "value": "1",
              "kind": "variable"
            }
          ],
          "35": [
            {
              "name": "counter",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "index",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "37": [
            {
              "name": "index",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 9,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 55,
      "col": 23,
      "rule": "VC_DIVISION_CHECK",
      "severity": "info",
      "entity": {
        "name": "Calculator.decimalToBinary",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 7
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 55,
      "check_col": 23,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "calculator.adb",
      "line": 20,
      "col": 40,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.decimalToOctal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 12
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (none)",
              "steps": 87,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 87,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 20,
      "check_col": 40,
      "tracefile": "calculator.adb_20_40_range_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "18": [
            {
              "name": "rest",
              "value": "0",
              "kind": "variable"
            }
          ],
          "19": [
            {
              "name": "counter",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "rest",
              "value": "-9",
              "kind": "variable"
            },
            {
              "name": "resultArray",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ],
          "20": [
            {
              "name": "rest",
              "value": "-9",
              "kind": "variable"
            },
            {
              "name": "resultArray",
              "value": "(others => 0)",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "12": [
            {
              "name": "Decimal",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 10,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 37,
      "col": 30,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4376,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3378,
              "time": 8.60000000000000E-01
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 3925,
                    "time": 9.70000000000000E-01
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 4332,
                    "time": 9.80000000000000E-01
                  }
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 37,
      "check_col": 30,
      "tracefile": "calculator.adb_37_30_overflow_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "35": [
            {
              "name": "counter",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "index",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "37": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "0",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 11,
      "how_proved": "prover"
    },
    {
      "file": "calculator.adb",
      "line": 41,
      "col": 15,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Calculator.binaryToDecimal",
        "sloc": [
          {
            "file": "calculator.ads",
            "line": 6
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Timeout",
              "steps": 4389,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (other)",
              "steps": 3249,
              "time": 8.70000000000000E-01
            }
          },
          "transformations": {
            "split_disj": [
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 4914,
                    "time": 9.90000000000000E-01
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 92,
                    "time": 0
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 4591,
                    "time": 9.60000000000000E-01
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                  "CVC4_CE": {
                    "result": "Unknown (other)",
                    "steps": 92,
                    "time": 0
                  }
                },
                "transformations": {
                }
              },
              {
                "proof_attempts": {
                },
                "transformations": {
                }
              }
            ]
          }
        }
      ],
      "check_file": "calculator.adb",
      "check_line": 41,
      "check_col": 15,
      "tracefile": "calculator.adb_41_15_range_check.trace",
      "cntexmp": {
        "calculator.adb": {
          "27": [
            {
              "name": "result",
              "value": "0",
              "kind": "variable"
            }
          ],
          "30": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "32": [
            {
              "name": "result",
              "value": "1",
              "kind": "variable"
            }
          ],
          "35": [
            {
              "name": "counter",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            },
            {
              "name": "result",
              "value": "-1",
              "kind": "variable"
            }
          ],
          "39": [
            {
              "name": "index",
              "value": "1",
              "kind": "variable"
            }
          ],
          "41": [
            {
              "name": "result",
              "value": "-1",
              "kind": "variable"
            }
          ]
        },
        "calculator.ads": {
          "6": [
            {
              "name": "Binary",
              "value": "(32 => True, others => False)",
              "kind": "variable"
            },
            {
              "name": "Binary'First",
              "value": "0",
              "kind": "variable"
            },
            {
              "name": "Binary'Last",
              "value": "32",
              "kind": "variable"
            }
          ]
        }
      },
      "msg_id": 12,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Calculator.octalToDecimal",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 8
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Calculator.decimalToOctal",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 12
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Calculator.binaryToDecimal",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 6
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Calculator",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 1
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Calculator.decimalToBinary",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 7
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Calculator.decimalToBinary",
          "sloc": [
            {
              "file": "calculator.ads",
              "line": 7
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "marking": 2.66999995801598E-04,
    "globals (basic)": 1.01999998150859E-04,
    "globals/properties (advanced)": 4.38999995822087E-04,
    "flow analysis": 6.56099990010262E-03,
    "codepeer results": 7.00000009601354E-06,
    "init_why_sections": 2.07000004593283E-04,
    "translation of standard": 3.28400009311736E-03,
    "translation of compilation unit": 6.35799998417497E-03,
    "proof": 8.65132904052734E+00
  }
}
